(global-set-key "\C-x\C-b" 'buffer-menu)
(global-set-key (kbd "C-c w") 'copy-word)
(global-set-key (kbd "C-c l") 'copy-line)
(global-set-key (kbd "<C-S-return>") 'insert-new-line-up)
(global-set-key (kbd "<C-return>") 'insert-new-line-down)
(global-set-key [C-S-right] 'shift-right)
(global-set-key [C-S-left] 'shift-left)


(global-set-key [(control f3)] 'highlight-symbol-at-point)
(global-set-key [f3] 'highlight-symbol-next)
(global-set-key [(shift f3)] 'highlight-symbol-prev)
(global-set-key [(meta f3)] 'highlight-symbol-prev)

 '(lambda () (define-key eshell-mode-map "\C-a" 'eshell-maybe-bol)))

 (global-set-key [f8] 'shell-pop)

 (global-set-key [f12] 'ecb-activate)
(global-set-key [C-f12] 'ecb-deactivate)
;(global-set-key [f11] 'delete-other-windows)
(global-set-key (kbd "C-c 0") 'ecb-goto-window-directories)
(global-set-key (kbd "C-c 1") 'ecb-goto-window-sources)
(global-set-key (kbd "C-c 2") 'ecb-goto-window-methods)
(global-set-key (kbd "C-c 3") 'ecb-goto-window-symboldef)
(global-set-key (kbd "C-c e") 'ecb-goto-window-edit-last)
(global-set-key (kbd "C-c r") 'ecb-redraw-layout)

; only in c-mode
(local-set-key (kbd "RET") 'newline-and-indent)
(local-set-key (kbd "C-c ;") 'comment-line)
(local-set-key (kbd "C-c I") 'ifdef-mark)
(define-key gtags-mode-map (kbd "C-c a b") 'gtags-pop-stack)
(define-key gtags-mode-map (kbd "C-c a f") 'gtags-find-file)
(define-key gtags-mode-map (kbd "C-c a p") 'gtags-parse-file)
(define-key gtags-mode-map (kbd "C-c a e") 'gtags-find-with-grep)
(define-key gtags-mode-map (kbd "C-c a s") 'gtags-find-symbol)
(define-key gtags-mode-map (kbd "C-c a c") 'gtags-find-rtag)
(define-key gtags-mode-map (kbd "C-c a g") 'gtags-find-tag)

; C-c s is for cscope


align by regexp
===============
if you want align the following:

    'abc' => 1,
    'abcabc' =>2,
    'abcabcabc' => 3,

to

    'abc'	=> 1,
    'abcabc'	=>2,
    'abcabcabc' => 3,

you can archive this by

1. Select the region
2. Type M-x align-regexp RET
3. Type = and hit enter.

You can also use the align command instead of align-regexp.
The difference is that align automatically chooses the regular expression(s)
to use based on the major-mode of the buffer.
So if you are trying to align a block of variable
initializations and assignments in a c-mode file,
then it will automatically do the right thing without
you needing to think of the regular expressions which are needed. Can be convenient.

int x = 3;
double y = 9.0;
unsigned int z = 6;
const char c = 'A';

And type M-x align RET. The result is:

int          x = 3;
double       y = 9.0;
unsigned int z = 6;
const char   c = 'A';

I should add, though, that this will not always work. If there are no regular expressions defined for the major-mode of the current buffer, then the call to align will do nothing. Then, you need to fall back on align-regexp.


my_function(
    int         *foo,
    double     **pfoo,
    int          bar)
               ^
1234567890123456

You can try variation of align-regexp. M-x align-entire should get:

my_function(
    int       *foo,
    double   **pfoo,
    int        bar)
               ^
1234567890123456

magit
=====
M-x magit-status
